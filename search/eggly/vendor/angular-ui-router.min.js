



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>egghead-angularjs-from-scratch-getting-started/angular-ui-router.min.js at master · eggheadio/egghead-angularjs-from-scratch-getting-started · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="eggheadio/egghead-angularjs-from-scratch-getting-started" name="twitter:title" /><meta content="Contribute to egghead-angularjs-from-scratch-getting-started development by creating an account on GitHub." name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/5975001?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/5975001?v=2&amp;s=400" property="og:image" /><meta content="eggheadio/egghead-angularjs-from-scratch-getting-started" property="og:title" /><meta content="https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started" property="og:url" /><meta content="Contribute to egghead-angularjs-from-scratch-getting-started development by creating an account on GitHub." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    
    <meta name="pjax-timeout" content="1000">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="47CC74C5:527E:52B4875:54581FA0" name="octolytics-dimension-request_id" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="zDcS+vV88thqxyOfAF0oM8F2PhwMZ0ody2TGvJLmt5Tdi8YU0slszXgXRnoGcA/UzfathuPVy0RsaDBRR+Fjgg==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-b1c905f1bdc31980aab4c315e0dd478fad5d2898a408bd7390807a27ba60160b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-9b82a8608bca900d23d48fd205a4a53ccd68c945b79bb71a5d39b0ca8e163ae5.css" media="all" rel="stylesheet" type="text/css" />
    
    


    <meta http-equiv="x-pjax-version" content="72f0082cf85d2dd9ee0c14a88a49a4a6">

      
  <meta name="description" content="Contribute to egghead-angularjs-from-scratch-getting-started development by creating an account on GitHub.">
  <meta name="go-import" content="github.com/eggheadio/egghead-angularjs-from-scratch-getting-started git https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started.git">

  <meta content="5975001" name="octolytics-dimension-user_id" /><meta content="eggheadio" name="octolytics-dimension-user_login" /><meta content="22604033" name="octolytics-dimension-repository_id" /><meta content="eggheadio/egghead-angularjs-from-scratch-getting-started" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="22604033" name="octolytics-dimension-repository_network_root_id" /><meta content="eggheadio/egghead-angularjs-from-scratch-getting-started" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started/commits/master.atom" rel="alternate" title="Recent Commits to egghead-angularjs-from-scratch-getting-started:master" type="application/atom+xml">

  </head>


  <body class="logged_out  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out" role="banner">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/" ga-data-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions" role="navigation">
        <a class="button primary" href="/join" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Feggheadio%2Fegghead-angularjs-from-scratch-getting-started%2Fblob%2Fmaster%2Fvendor%2Fangular-ui-router.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
    </div>

    <div class="site-search repo-scope js-site-search" role="search">
      <form accept-charset="UTF-8" action="/eggheadio/egghead-angularjs-from-scratch-getting-started/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/eggheadio/egghead-angularjs-from-scratch-getting-started/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
    </div>

      <ul class="header-nav left" role="navigation">
          <li class="header-nav-item">
            <a class="header-nav-link" href="/explore" data-ga-click="(Logged out) Header, go to explore, text:explore">Explore</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/features" data-ga-click="(Logged out) Header, go to features, text:features">Features</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://enterprise.github.com/" data-ga-click="(Logged out) Header, go to enterprise, text:enterprise">Enterprise</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="(Logged out) Header, go to blog, text:blog">Blog</a>
          </li>
      </ul>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">


  <li>
      <a href="/login?return_to=%2Feggheadio%2Fegghead-angularjs-from-scratch-getting-started"
    class="minibutton with-count star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/eggheadio/egghead-angularjs-from-scratch-getting-started/stargazers">
      58
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Feggheadio%2Fegghead-angularjs-from-scratch-getting-started"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/network" class="social-count">
        45
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/eggheadio" class="url fn" itemprop="url" rel="author"><span itemprop="title">eggheadio</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/eggheadio/egghead-angularjs-from-scratch-getting-started" class="js-current-repository js-repo-home-link" data-pjax-container-selector="#js-repo-pjax-container">egghead-angularjs-from-scratch-getting-started</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders" role="navigation" data-issue-count-url="/eggheadio/egghead-angularjs-from-scratch-getting-started/issues/counts" data-pjax-container-selector="#js-repo-pjax-container">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /eggheadio/egghead-angularjs-from-scratch-getting-started">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /eggheadio/egghead-angularjs-from-scratch-getting-started/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /eggheadio/egghead-angularjs-from-scratch-getting-started/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>


  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /eggheadio/egghead-angularjs-from-scratch-getting-started/pulse/weekly">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /eggheadio/egghead-angularjs-from-scratch-getting-started/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/eggheadio/egghead-angularjs-from-scratch-getting-started" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save eggheadio/egghead-angularjs-from-scratch-getting-started to your computer and use it in GitHub Desktop." aria-label="Save eggheadio/egghead-angularjs-from-scratch-getting-started to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of eggheadio/egghead-angularjs-from-scratch-getting-started as a zip file"
                   title="Download the contents of eggheadio/egghead-angularjs-from-scratch-getting-started as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/blob/f75950ee96cb7458ea061b25fbcaf2d6884a04bf/vendor/angular-ui-router.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:5c7453e7ac6aa1cb9ce4fff75d7870dd -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/blob/master/vendor/angular-ui-router.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/07-delete-bookmark/vendor/angular-ui-router.min.js"
                 data-name="07-delete-bookmark"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="07-delete-bookmark">07-delete-bookmark</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/06-editing-bookmark/vendor/angular-ui-router.min.js"
                 data-name="06-editing-bookmark"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="06-editing-bookmark">06-editing-bookmark</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/05-create-bookmark/vendor/angular-ui-router.min.js"
                 data-name="05-create-bookmark"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="05-create-bookmark">05-create-bookmark</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/04-simple-states/vendor/angular-ui-router.min.js"
                 data-name="04-simple-states"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="04-simple-states">04-simple-states</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/03-filters/vendor/angular-ui-router.min.js"
                 data-name="03-filters"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="03-filters">03-filters</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/02-controllers/vendor/angular-ui-router.min.js"
                 data-name="02-controllers"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="02-controllers">02-controllers</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/01-bootstrap/vendor/angular-ui-router.min.js"
                 data-name="01-bootstrap"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="01-bootstrap">01-bootstrap</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="vendor/angular-ui-router.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/eggheadio/egghead-angularjs-from-scratch-getting-started" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">egghead-angularjs-from-scratch-getting-started</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/tree/master/vendor" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">vendor</span></a></span><span class="separator"> / </span><strong class="final-path">angular-ui-router.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Joel Hooks" class="avatar" data-user="86834" height="24" src="https://avatars3.githubusercontent.com/u/86834?v=2&amp;s=48" width="24" />
        <span class="author"><a href="/joelhooks" rel="contributor">joelhooks</a></span>
        <time datetime="2014-08-04T12:58:13Z" is="relative-time">Aug 4, 2014</time>
        <div class="commit-title">
            <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/commit/f6934cf6169e45b6435435538d1ccaa326bde421" class="message" data-pjax="true" title="Application Bootstrap">Application Bootstrap</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Joel Hooks" data-user="86834" height="24" src="https://avatars3.githubusercontent.com/u/86834?v=2&amp;s=48" width="24" />
            <a href="/joelhooks">joelhooks</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>7 lines (7 sloc)</span>
          <span class="meta-divider"></span>
        <span>20.367 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/raw/master/vendor/angular-ui-router.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/blame/master/vendor/angular-ui-router.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/eggheadio/egghead-angularjs-from-scratch-getting-started/commits/master/vendor/angular-ui-router.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

            <a class="octicon-button disabled tooltipped tooltipped-w" href="#"
               aria-label="You must be signed in to make or propose changes"><span class="octicon octicon-pencil"></span></a>

          <a class="octicon-button danger disabled tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="cm">/**</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="cm"> * State-based routing for AngularJS</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="cm"> * @version v0.2.10</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="cm"> * @link http://angular-ui.github.com/</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="cm"> * @license MIT License, http://www.opensource.org/licenses/MIT</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">===</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="s2">&quot;ui.router&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">I</span><span class="p">(</span><span class="k">new</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="kd">function</span><span class="p">(){},{</span><span class="nx">prototype</span><span class="o">:</span><span class="nx">a</span><span class="p">})),</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">)})}),</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">path</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="k">break</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nb">Number</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span> <span class="k">in</span> <span class="nx">h</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">params</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">params</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">params</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">g</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">])</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">||</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">]),</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">]]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">]])}</span><span class="k">return</span> <span class="nx">I</span><span class="p">({},</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="nb">String</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">}),</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]}),</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">g</span><span class="p">),{</span><span class="nx">$$promises</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">$$values</span><span class="o">:</span><span class="nx">g</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">study</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">!==</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">o</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="nx">n</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Cyclic dependency: &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; -&gt; &quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">)}],</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">annotate</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="nx">n</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">o</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">then</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$$promises</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&#39;invocables&#39; must be an object&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="o">--</span><span class="nx">s</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="o">||</span><span class="nx">e</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$values</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">$$values</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">$$promises</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">r</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">$$failure</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">$$failure</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="nx">l</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="p">)),</span><span class="nx">l</span><span class="p">.</span><span class="nx">promise</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">r</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">()},</span><span class="nx">i</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">q</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="o">--</span><span class="nx">m</span><span class="o">||</span><span class="nx">j</span><span class="p">()},</span><span class="nx">i</span><span class="p">))}),</span><span class="nx">m</span><span class="o">||</span><span class="nx">j</span><span class="p">(),</span><span class="nx">q</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">promise</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&#39;locals&#39; must be an object&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&#39;parent&#39; must be a promise returned by $resolve.resolve()&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">promise</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">$$promises</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="nx">I</span><span class="p">({},</span><span class="nx">d</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="o">+</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="nx">t</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$failure</span><span class="p">))</span><span class="k">return</span> <span class="nx">k</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$failure</span><span class="p">),</span><span class="nx">p</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$values</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$values</span><span class="p">),</span><span class="nx">h</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$promises</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">v</span><span class="o">&gt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">u</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">u</span><span class="p">])</span><span class="o">?</span><span class="nx">h</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">m</span><span class="p">[</span><span class="nx">u</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">m</span><span class="p">[</span><span class="nx">u</span><span class="o">+</span><span class="mi">2</span><span class="p">]);</span><span class="k">return</span> <span class="nx">p</span><span class="p">}},</span><span class="k">this</span><span class="p">.</span><span class="nx">resolve</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">study</span><span class="p">(</span><span class="nx">a</span><span class="p">)(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fromConfig</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fromString</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fromUrl</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateProvider</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">fromProvider</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateProvider</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">fromString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">fromUrl</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">cache</span><span class="o">:</span><span class="nx">b</span><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">})},</span><span class="k">this</span><span class="p">.</span><span class="nx">fromProvider</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">||</span><span class="p">{</span><span class="nx">params</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\w+(-+\w+)*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid parameter name &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&#39; in pattern &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Duplicate parameter name &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&#39; in pattern &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\\\[\]\^$*+?.()|{}]/g</span><span class="p">,</span><span class="s2">&quot;\\$&amp;&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="sr">/([:*])(\w+)|\{(\w+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;^&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">source</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">;(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;.*&quot;</span><span class="o">:</span><span class="s2">&quot;[^/]*&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="p">),</span><span class="o">!</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">));)</span><span class="nx">g</span><span class="o">+=</span><span class="nx">c</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastIndex</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceSearch</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">sourcePath</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">H</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/[&amp;?]/</span><span class="p">),</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">sourcePath</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceSearch</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">g</span><span class="o">+=</span><span class="nx">c</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;$&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">regexp</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">compile</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">isMatcher</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">exec</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">concat</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\(.)/g</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\$(\$|\d{1,2})/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="s2">&quot;$&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">Number</span><span class="p">(</span><span class="nx">c</span><span class="p">)]})}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">,{</span><span class="nx">$match</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rule</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&#39;rule&#39; must be a function&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">otherwise</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&#39;rule&#39; must be a function&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">when</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">compile</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="o">!</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="nx">D</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;invalid &#39;handler&#39; in when()&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">matcher</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">compile</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$match&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">a</span><span class="p">)}]),</span><span class="nx">I</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">path</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">search</span><span class="p">()))},{</span><span class="nx">prefix</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">prefix</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">prefix</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">})},</span><span class="nx">regex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">global</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">sticky</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;when() RegExp must not be global or sticky&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$match&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">)}]),</span><span class="nx">I</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">path</span><span class="p">()))},{</span><span class="nx">prefix</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">)})}},</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">matcher</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">isMatcher</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">regex</span><span class="o">:</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nb">RegExp</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span> <span class="k">in</span> <span class="nx">j</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">rule</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="p">](</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">));</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;invalid &#39;what&#39; in when()&quot;</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$location&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$injector&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">().</span><span class="nx">url</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]))</span><span class="k">return</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">f</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$locationChangeSuccess&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),{</span><span class="nx">sync</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">()}}}]}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;No reference point given for path &#39;&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">!==</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="o">!==</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">!==</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Path &#39;&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&#39; not valid for state &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">parent</span><span class="p">}</span><span class="k">else</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;.&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="p">}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">w</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">return</span><span class="o">!</span><span class="nx">l</span><span class="o">||!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="nx">l</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">self</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">l</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">x</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">self</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">resolve</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="o">||</span><span class="p">{},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;@&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;State must have a valid name&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;State &#39;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39;&#39; is already defined&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">w</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">return</span> <span class="nx">m</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">self</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">z</span><span class="p">)</span><span class="nx">D</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="nx">b</span><span class="p">,</span><span class="nx">z</span><span class="p">.</span><span class="nx">$delegates</span><span class="p">[</span><span class="nx">f</span><span class="p">]));</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="nx">b</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">,[</span><span class="s2">&quot;$match&quot;</span><span class="p">,</span><span class="s2">&quot;$stateParams&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">navigable</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">v</span><span class="p">.</span><span class="nx">transitionTo</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,{</span><span class="nx">location</span><span class="o">:!</span><span class="mi">1</span><span class="p">})}]),</span><span class="nx">x</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">g</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;**&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="s2">&quot;**&quot;</span><span class="p">)),</span><span class="s2">&quot;**&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nb">Number</span><span class="p">.</span><span class="nx">MAX_VALUE</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;**&quot;</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;*&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">C</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">D</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">z</span><span class="p">.</span><span class="nx">$delegates</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="p">.</span><span class="nx">$delegates</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(){</span><span class="nx">r</span><span class="p">.</span><span class="nx">url</span><span class="p">()</span><span class="o">!==</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">url</span><span class="p">(</span><span class="nx">M</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">())}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">$stateParams</span><span class="o">:</span><span class="nx">i</span><span class="p">};</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">globals</span><span class="o">=</span><span class="nx">a</span><span class="p">})];</span><span class="k">return</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">views</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">resolve</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">resolve</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">resolve</span><span class="o">:</span><span class="p">{};</span><span class="nx">e</span><span class="p">.</span><span class="nx">$template</span><span class="o">=</span><span class="p">[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">d</span><span class="p">,{</span><span class="nx">view</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">locals</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">notify</span><span class="o">:!</span><span class="mi">1</span><span class="p">})</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">}],</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">,</span><span class="nx">a</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">controllerProvider</span><span class="p">)</span><span class="o">||</span><span class="nx">G</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">controllerProvider</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">e</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$controller</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">controllerProvider</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">g</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="p">.</span><span class="nx">$$controller</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">controller</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$state</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">$$controllerAs</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">controllerAs</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">}))}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">all</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">h</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;transition superseded&quot;</span><span class="p">)),</span><span class="nx">F</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;transition prevented&quot;</span><span class="p">)),</span><span class="nx">K</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;transition aborted&quot;</span><span class="p">)),</span><span class="nx">L</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;transition failed&quot;</span><span class="p">)),</span><span class="nx">M</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">url</span><span class="p">(),</span><span class="nx">N</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">baseHref</span><span class="p">();</span><span class="k">return</span> <span class="nx">u</span><span class="p">.</span><span class="nx">locals</span><span class="o">=</span><span class="p">{</span><span class="nx">resolve</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">globals</span><span class="o">:</span><span class="p">{</span><span class="nx">$stateParams</span><span class="o">:</span><span class="p">{}}},</span><span class="nx">v</span><span class="o">=</span><span class="p">{</span><span class="nx">params</span><span class="o">:</span><span class="p">{},</span><span class="nx">current</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">$current</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">transition</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">reload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">v</span><span class="p">.</span><span class="nx">transitionTo</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">current</span><span class="p">,</span><span class="nx">q</span><span class="p">,{</span><span class="nx">reload</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">inherit</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">notify</span><span class="o">:!</span><span class="mi">1</span><span class="p">})},</span><span class="nx">v</span><span class="p">.</span><span class="nx">go</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">transitionTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">I</span><span class="p">({</span><span class="nx">inherit</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">relative</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">},</span><span class="nx">c</span><span class="p">))},</span><span class="nx">v</span><span class="p">.</span><span class="nx">transitionTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{},</span><span class="nx">f</span><span class="o">=</span><span class="nx">I</span><span class="p">({</span><span class="nx">location</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">inherit</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">relative</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">notify</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">reload</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">$retry</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">f</span><span class="o">||</span><span class="p">{});</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">relative</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">p</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">toParams</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">options</span><span class="o">:</span><span class="nx">f</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$stateNotFound&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="p">)</span><span class="k">return</span> <span class="nx">z</span><span class="p">(),</span><span class="nx">K</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">retry</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">$retry</span><span class="p">)</span><span class="k">return</span> <span class="nx">z</span><span class="p">(),</span><span class="nx">L</span><span class="p">;</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">retry</span><span class="p">);</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">w</span><span class="o">!==</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">?</span><span class="nx">B</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">$retry</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">transitionTo</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">to</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">toParams</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">options</span><span class="p">))},</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">K</span><span class="p">}),</span><span class="nx">z</span><span class="p">(),</span><span class="nx">w</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">to</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">toParams</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">relative</span><span class="p">),</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">p</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">relative</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Could not resolve &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&#39; from state &#39;&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">relative</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;No such state &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">y</span><span class="p">])</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Cannot transition to abstract state &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">inherit</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="p">{},</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">,</span><span class="nx">p</span><span class="p">)),</span><span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">x</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">locals</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="o">===</span><span class="nx">o</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">D</span><span class="p">.</span><span class="nx">ownParams</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">.</span><span class="nx">reload</span><span class="p">;</span><span class="nx">x</span><span class="o">++</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">x</span><span class="p">])</span><span class="nx">G</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">locals</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">f</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">reloadOnSearch</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">(),</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">current</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="p">{}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">notify</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$stateChangeStart&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="p">))</span><span class="k">return</span> <span class="nx">z</span><span class="p">(),</span><span class="nx">F</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">O</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">O</span><span class="o">&lt;</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">O</span><span class="o">++</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">O</span><span class="p">])</span><span class="nx">G</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">N</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">D</span><span class="o">===</span><span class="nx">b</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">G</span><span class="p">);</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">!==</span><span class="nx">P</span><span class="p">)</span><span class="k">return</span> <span class="nx">B</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">x</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">onExit</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">onExit</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">locals</span><span class="p">.</span><span class="nx">globals</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">locals</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">locals</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">onEnter</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">onEnter</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">locals</span><span class="p">.</span><span class="nx">globals</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">!==</span><span class="nx">P</span><span class="p">)</span><span class="k">return</span> <span class="nx">B</span><span class="p">;</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">J</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">navigable</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">location</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">url</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">locals</span><span class="p">.</span><span class="nx">globals</span><span class="p">.</span><span class="nx">$stateParams</span><span class="p">)),</span><span class="s2">&quot;replace&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">location</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">()),</span><span class="nx">f</span><span class="p">.</span><span class="nx">notify</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$stateChangeSuccess&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">url</span><span class="p">(),</span><span class="nx">v</span><span class="p">.</span><span class="nx">current</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">!==</span><span class="nx">P</span><span class="o">?</span><span class="nx">B</span><span class="o">:</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">transition</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$stateChangeError&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">self</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">z</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">d</span><span class="p">))});</span><span class="k">return</span> <span class="nx">P</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">is</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="o">!==</span><span class="nx">e</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">C</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">d</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">includes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">includes</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">]))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">C</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">f</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">I</span><span class="p">({</span><span class="nx">lossy</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">inherit</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">absolute</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">relative</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="p">{});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">relative</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">{},</span><span class="nx">v</span><span class="p">.</span><span class="nx">$current</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">lossy</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">navigable</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">url</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">{}))</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">html5Mode</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">hashPrefix</span><span class="p">()</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="s2">&quot;/&quot;</span><span class="o">!==</span><span class="nx">N</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">html5Mode</span><span class="p">()</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">absolute</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">absolute</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">protocol</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;://&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">host</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="mi">80</span><span class="o">==</span><span class="nx">r</span><span class="p">.</span><span class="nx">port</span><span class="p">()</span><span class="o">||</span><span class="mi">443</span><span class="o">==</span><span class="nx">r</span><span class="p">.</span><span class="nx">port</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">port</span><span class="p">())</span><span class="o">+</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">html5Mode</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;/&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">self</span><span class="p">)}),</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">self</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">self</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">v</span><span class="p">}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">locals</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">reload</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">reloadOnSearch</span><span class="o">!==!</span><span class="mi">1</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">u</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="p">{},</span><span class="nx">x</span><span class="o">=</span><span class="p">{},</span><span class="nx">y</span><span class="o">=</span><span class="s2">&quot;abstract&quot;</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="p">{</span><span class="nx">parent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="k">return</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^(.+)\.[^.]+$/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">u</span><span class="p">},</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">self</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">I</span><span class="p">({},</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">},</span><span class="nx">url</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;^&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">compile</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">navigable</span><span class="o">||</span><span class="nx">u</span><span class="p">).</span><span class="nx">url</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">isMatcher</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid url &#39;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&#39; in state &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)},</span><span class="nx">navigable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">navigable</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">params</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">parameters</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid params in state &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Both params and url specicified in state &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">},</span><span class="nx">views</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">views</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">views</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;@&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">}),</span><span class="nx">b</span><span class="p">},</span><span class="nx">ownParams</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Missing required parameter &#39;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39; in state &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=!</span><span class="mi">1</span><span class="p">});</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">c</span><span class="p">},</span><span class="nx">path</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">[]},</span><span class="nx">includes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">?</span><span class="nx">I</span><span class="p">({},</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">includes</span><span class="p">)</span><span class="o">:</span><span class="p">{};</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">},</span><span class="nx">$delegates</span><span class="o">:</span><span class="p">{}};</span><span class="nx">u</span><span class="o">=</span><span class="nx">n</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="s2">&quot;^&quot;</span><span class="p">,</span><span class="nx">views</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;abstract&quot;</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">u</span><span class="p">.</span><span class="nx">navigable</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">decorator</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$view&quot;</span><span class="p">,</span><span class="s2">&quot;$injector&quot;</span><span class="p">,</span><span class="s2">&quot;$resolve&quot;</span><span class="p">,</span><span class="s2">&quot;$stateParams&quot;</span><span class="p">,</span><span class="s2">&quot;$location&quot;</span><span class="p">,</span><span class="s2">&quot;$urlRouter&quot;</span><span class="p">,</span><span class="s2">&quot;$browser&quot;</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">template</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">view</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">locals</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">notify</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">async</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="p">{}};</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">I</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">view</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fromConfig</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">view</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">locals</span><span class="p">)),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">notify</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$viewContentLoading&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">}}}</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$templateFactory&quot;</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">useAnchorScroll</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$anchorScroll&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollIntoView</span><span class="p">()},</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}}]}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">has</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">enter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">()},</span><span class="nx">leave</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">b</span><span class="p">()}}};</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">enter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">enter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">leave</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">leave</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}};</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">enter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">enter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">()},</span><span class="nx">leave</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">leave</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">()}}}</span><span class="k">return</span> <span class="nx">c</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;$animator&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;$animate&quot;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;ECA&quot;</span><span class="p">,</span><span class="nx">terminal</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">priority</span><span class="o">:</span><span class="mi">400</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">leave</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">}),</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">$new</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$uiViewName&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$current</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">locals</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="nx">k</span><span class="o">!==</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">enter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(){(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">p</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">i</span><span class="p">()});</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">locals</span><span class="p">[</span><span class="nx">r</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$uiViewName&quot;</span><span class="p">)],</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;$viewContentLoaded&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">o</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">onload</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">autoscroll</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$viewContentLoading&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">j</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}};</span><span class="k">return</span> <span class="nx">j</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;ECA&quot;</span><span class="p">,</span><span class="nx">priority</span><span class="o">:-</span><span class="mi">400</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">html</span><span class="p">();</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">uiView</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">inheritedData</span><span class="p">(</span><span class="s2">&quot;$uiView&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;@&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">i</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)),</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$uiViewName&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">$current</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">locals</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$uiView&quot;</span><span class="p">,{</span><span class="nx">name</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">state</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">$$state</span><span class="p">}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">$template</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">$template</span><span class="o">:</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">contents</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">$$controller</span><span class="p">){</span><span class="nx">k</span><span class="p">.</span><span class="nx">$scope</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">$$controller</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">$$controllerAs</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">.</span><span class="nx">$$controllerAs</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$ngControllerController&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">().</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$ngControllerController&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">)}</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}}}}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^([^(]+?)\s*(\((.*)\))?$/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="mi">4</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid state ref &#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">state</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">paramExpr</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">inheritedData</span><span class="p">(</span><span class="s2">&quot;$uiView&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">state</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">state</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;location&quot;</span><span class="p">,</span><span class="s2">&quot;inherit&quot;</span><span class="p">,</span><span class="s2">&quot;reload&quot;</span><span class="p">];</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;?^uiSrefActive&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">uiSref</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">$current</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;FORM&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;action&quot;</span><span class="o">:</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="nx">relative</span><span class="o">:</span><span class="nx">k</span><span class="p">},</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">uiSrefOpts</span><span class="p">)</span><span class="o">||</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">])});</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">href</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">state</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">$$setStateInfo</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">state</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">c</span><span class="o">?</span><span class="k">void</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}};</span><span class="nx">i</span><span class="p">.</span><span class="nx">paramExpr</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">paramExpr</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">paramExpr</span><span class="p">)),</span><span class="nx">q</span><span class="p">(),</span><span class="nx">l</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">which</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">button</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;target&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">state</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">())})}}}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$element&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$current</span><span class="p">.</span><span class="nx">self</span><span class="o">===</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">()</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">k</span><span class="o">||</span><span class="nx">j</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">uiSrefActive</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)(</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$$setStateInfo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">()},</span><span class="nx">d</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeSuccess&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">)}]}}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">locals</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">locals</span><span class="p">.</span><span class="nx">globals</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">locals</span><span class="p">.</span><span class="nx">$stateParams</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">locals</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">redirectTo</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">redirectTo</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid &#39;redirectTo&#39; in when()&quot;</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">path</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">search</span><span class="p">())}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">,{</span><span class="nx">parent</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;route:&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">url</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">onEnter</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">onExit</span><span class="o">:</span><span class="nx">f</span><span class="p">}));</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">routes</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">current</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeStart&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$routeChangeStart&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">))}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$routeChangeSuccess&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">)),</span><span class="nx">J</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">params</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeError&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s2">&quot;$routeChangeError&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">)}),</span><span class="nx">f</span><span class="p">}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="nx">e</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$$state&quot;</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">when</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$state&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$routeParams&quot;</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isString</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isObject</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isArray</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">forEach</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">extend</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">copy</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.util&quot;</span><span class="p">,[</span><span class="s2">&quot;ng&quot;</span><span class="p">]),</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.router&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.router.util&quot;</span><span class="p">]),</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.router.router&quot;</span><span class="p">,</span><span class="s2">&quot;ui.router.util&quot;</span><span class="p">]),</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">]),</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.compat&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.router&quot;</span><span class="p">]),</span><span class="nx">l</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$injector&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.util&quot;</span><span class="p">).</span><span class="nx">service</span><span class="p">(</span><span class="s2">&quot;$resolve&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$http&quot;</span><span class="p">,</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="s2">&quot;$injector&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.util&quot;</span><span class="p">).</span><span class="nx">service</span><span class="p">(</span><span class="s2">&quot;$templateFactory&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">concat</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sourcePath</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceSearch</span><span class="p">)},</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">source</span><span class="p">},</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">exec</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">regexp</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Unbalanced capture group in route &#39;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="k">for</span><span class="p">(;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]];</span><span class="k">return</span> <span class="nx">h</span><span class="p">},</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">parameters</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">},</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]],</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">+=</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">i</span><span class="o">+=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="k">for</span><span class="p">(;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]],</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">+=</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.util&quot;</span><span class="p">).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$urlMatcherFactory&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$urlMatcherFactoryProvider&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.router&quot;</span><span class="p">).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$urlRouter&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$urlRouterProvider&quot;</span><span class="p">,</span><span class="s2">&quot;$urlMatcherFactoryProvider&quot;</span><span class="p">,</span><span class="s2">&quot;$locationProvider&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">value</span><span class="p">(</span><span class="s2">&quot;$stateParams&quot;</span><span class="p">,{}).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$state&quot;</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$view&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$uiViewScroll&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$state&quot;</span><span class="p">,</span><span class="s2">&quot;$injector&quot;</span><span class="p">,</span><span class="s2">&quot;$uiViewScroll&quot;</span><span class="p">],</span><span class="nx">u</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$controller&quot;</span><span class="p">,</span><span class="s2">&quot;$state&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiView&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiView&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">x</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$state&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">],</span><span class="nx">y</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$state&quot;</span><span class="p">,</span><span class="s2">&quot;$stateParams&quot;</span><span class="p">,</span><span class="s2">&quot;$interpolate&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiSref&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiSrefActive&quot;</span><span class="p">,</span><span class="nx">y</span><span class="p">),</span><span class="nx">z</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$state&quot;</span><span class="p">],</span><span class="nx">A</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$state&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.state&quot;</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;isState&quot;</span><span class="p">,</span><span class="nx">z</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;includedByState&quot;</span><span class="p">,</span><span class="nx">A</span><span class="p">),</span><span class="nx">B</span><span class="p">.</span><span class="nx">$inject</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$stateProvider&quot;</span><span class="p">,</span><span class="s2">&quot;$urlRouterProvider&quot;</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.router.compat&quot;</span><span class="p">).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$route&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;ngView&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">)}(</span><span class="nb">window</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">angular</span><span class="p">);</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="https://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.03210s from github-fe139-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-fe1dc1d9b25d6a0cda010576a3c4be01906c9fd2ac07462042e5fceda326d50c.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-cc73c1a5a5ebdab80f17d11172601e5c71c8508f32095028c9d543de0bbf973e.js" type="text/javascript"></script>
      
      
  </body>
</html>

